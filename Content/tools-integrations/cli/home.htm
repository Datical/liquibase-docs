<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>Command Line Interface | Liquibase Docs</title>
        <meta rel="canonical" href="https://docs.liquibase.com/tools-integrations/cli/home.html" />
        <meta name="description" content="This page explains how to run liquibase from the command line. You can also get specific information about the liquibase.properties files." />
    </head>
    <body>
        <h1 class="Print">Command Line Interface</h1>
        <p><MadCap:variable name="General.Liquibase" /> can be run from the command line by running:</p>
        <figure class="highlight"><pre xml:space="preserve">
                <code class="language-bat" data-lang="bat">liquibase [global options] [command] [command parameters]</code>
            </pre>
        </figure>
        <p>The command line migrator works well when you want to do migrations on demand, but don't have <MadCap:xref href="../ant/home.html">Ant</MadCap:xref> or <MadCap:xref href="../maven/home.html">Maven</MadCap:xref> available such as on servers. 
The command line migrator also gives you more control over the process than the <MadCap:xref href="../community-supported/servlet-listener.html">Servlet Listener</MadCap:xref>, Ant or Maven do, allowing you to run maintenance commands like outputting SQL and listing/releasing database <MadCap:variable name="General.changelog" style="font-style: italic;" /> locks.</p>
        <p>Any values found after the command on the command line invocation will be considered a command parameter. The command line processor will 
validate whether the command line parameters are allowed for the current command. If the current command does not allow command line 
parameters or the parameter appears to be an incorrect format, then an error message of ‘unexpected command parameter' will be logged 
and the execution will terminate.</p>
        <p>The command line migrator also allows you to:</p>
        <ul>
            <li><a href="../../workflows/liquibase-community/using-rollback.htm"><MadCap:xref href="../../workflows/liquibase-community/using-rollback.htm">Perform rollback operations</MadCap:xref></a>
            </li>
            <li><a href="../../commands/community/diff.htm"><MadCap:xref href="../../commands/community/diff.htm">Generate diffs</MadCap:xref></a>
            </li>
            <li><a href="../../commands/community/generateChangeLog.html"><MadCap:xref href="../../commands/community/generateChangeLog.html">Generate <i>changelogs</i> from existing databases</MadCap:xref></a>
            </li>
            <li><a href="../../workflows/liquibase-community/generating-docs.htm"><MadCap:xref href="../../workflows/liquibase-community/generating-docs.htm">Generate database documentation</MadCap:xref></a>
            </li>
        </ul>
        <p>If you run the command line migrator without any arguments, you will get a help message listing all of your commands. See the following topics for a full list of commands:</p>
        <ul>
            <li>
                <MadCap:xref href="../../commands/community/home.htm">Liquibase Community Commands</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../commands/pro/home.htm">Liquibase Pro Commands</MadCap:xref>
            </li>
        </ul>
        <h2 id="using-a-liquibaseproperties-file">Using a <code class="highlighter-rouge">liquibase.properties</code> file</h2>
        <p>If you do not want to always specify options on the command line, you can create a properties file that contains default values. By default, <MadCap:variable name="General.Liquibase" /> will look for a file called <code class="highlighter-rouge"><MadCap:variable name="General.liquiPropFile" /></code> in the current working directory, but you can specify an alternate location with the <code class="highlighter-rouge">--defaultsFile</code> flag. If you have specified an option in a properties file and specify the same option on the command line, the value on the command line will override the properties file value.</p>
        <h3>Examples</h3>
        <h4>Standard Update Run</h4>
        <figure class="highlight"><pre xml:space="preserve">
                <code class="language-bat" data-lang="bat">java -jar liquibase.jar \
      --driver=oracle.jdbc.OracleDriver \
      --classpath=\path\to\classes:jdbcdriver.jar \
      --changeLogFile=com/example/db.changelog.xml \
      --url="jdbc:oracle:thin:@localhost:1521:oracle" \
      --username=scott \
      --password=tiger \
      update</code>
            </pre>
        </figure>
        <h4>Run update pulling <em>changelogs</em> from a .WAR file</h4>
        <figure class="highlight"><pre xml:space="preserve">
                <code class="language-bat" data-lang="bat">java -jar liquibase.jar \
      --driver=oracle.jdbc.OracleDriver \
      --classpath=website.war \
      --changeLogFile=com/example/db.changelog.xml \
      --url=jdbc:oracle:thin:@localhost:1521:oracle \
      --username=scott \
      --password=tiger \
      update</code>
            </pre>
        </figure>
        <h4>Run update pulling <em>changelogs</em> from an .EAR file</h4>
        <figure class="highlight"><pre xml:space="preserve">
                <code class="language-bat" data-lang="bat">java -jar liquibase.jar \
      --driver=oracle.jdbc.OracleDriver \
      --classpath=application.ear \
      --changeLogFile=com/example/db.changelog.xml \
      --url=jdbc:oracle:thin:@localhost:1521:oracle \
      --username=scott \
      --password=tiger \
      update</code>
            </pre>
        </figure>
        <h4>Don't execute <em>changeSets</em>, save SQL to /tmp/script.sql</h4>
        <figure class="highlight"><pre xml:space="preserve">
                <code class="language-bat" data-lang="bat">java -jar liquibase.jar \
        --driver=oracle.jdbc.OracleDriver \
        --classpath=jdbcdriver.jar \
        --url=jdbc:oracle:thin:@localhost:1521:oracle \
        --username=scott \
        --password=tiger \
        updateSQL &gt; /tmp/script.sql</code>
            </pre>
        </figure>
        <h4>List locks on the <code class="highlighter-rouge">DATABASECHANGELOGLOCK</code> table</h4>
        <figure class="highlight"><pre xml:space="preserve">
                <code class="language-bat" data-lang="bat">java -jar liquibase.jar \
        --driver=oracle.jdbc.OracleDriver \
        --classpath=jdbcdriver.jar \
        --url=jdbc:oracle:thin:@localhost:1521:oracle \
        --username=scott \
        --password=tiger \
        listLocks</code>
            </pre>
        </figure>
        <h4>Runs <MadCap:variable name="General.Liquibase" /> using defaults from <code class="highlighter-rouge">./liquibase.properties</code></h4>
        <figure class="highlight"><pre xml:space="preserve">
                <code class="language-bat" data-lang="bat">java -jar liquibase.jar update</code>
            </pre>
        </figure>
        <h4 id="liquibaseproperties"><code class="highlighter-rouge">liquibase.properties</code>
        </h4>
        <figure class="highlight"><pre xml:space="preserve">
                <code class="language-properties" data-lang="properties">
                    <span class="py">driver</span>
                    <span class="p">:</span>  <span class="s">oracle.jdbc.OracleDriver</span>  
<span class="py">classpath</span><span class="p">:</span>  <span class="s">jdbcdriver.jar</span>  
<span class="py">url</span><span class="p">:</span>  <span class="s">jdbc:oracle:thin:@localhost:1521:oracle</span>  
<span class="py">username</span><span class="p">:</span>  <span class="s">scott</span>  
<span class="py">password</span><span class="p">:</span>  <span class="s">tiger</span></code>
            </pre>
        </figure>
        <h4>Export Data from Database</h4>
        <p>This will export the data from the targeted database and put it in a folder “data” in a file name specified with &lt;insert file name&gt;.</p>
        <figure class="highlight"><pre xml:space="preserve">
                <code class="language-bat" data-lang="bat">java -jar liquibase.jar --changeLogFile="./data/&lt;insert file name&gt; " --diffTypes="data" generateChangeLog</code>
            </pre>
        </figure>
        <h4>Update passing <em>changelog</em> parameters</h4>
        <figure class="highlight"><pre xml:space="preserve">
                <code class="language-bat" data-lang="bat">liquibase.bat update -Dengine=myisam</code>
            </pre>
        </figure>
        <h2>Unicode</h2>
        <h3 id="mysql">MySQL</h3>
        <p>Add URL parameters useUnicode=true and characterEncoding=UTF-8 to set character encoding to utf8.</p>
        <p><em>Since v5.1.3 Connector/J now auto-detects servers configured with character_set_server=utf8mb4 or treats the Java encoding utf-8 passed using characterEncoding=… as utf8mb4.</em>
        </p>
        <figure class="highlight"><pre xml:space="preserve">
                <code class="language-bat" data-lang="bat">--url="jdbc:mysql://localhost/dbname?useUnicode=true&amp;characterEncoding=UTF-8</code>
            </pre>
        </figure>
        <p>See the <a href="https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-charsets.html"><a href="http://dev.mysql.com/doc/connector-j/en/connector-j-reference-charsets.html">MySQL Connector J Using Character Sets and Unicode</a></a> topic for more information.</p>
    </body>
</html>